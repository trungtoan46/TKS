@page "/in-phieu-nhap/{SoPhieu}"
@using TKS.Services.Interfaces
@using TKS.Models
@using TKS.Services.Helpers
@using TKS.Components.Layout
@layout PrintLayout

@inject INhapKhoService NhapKhoService
@inject INhapKhoRawService NhapKhoRawService
@inject IKhoService KhoService
@inject INhaCungCapService NhaCungCapService
@inject ISanPhamService SanPhamService
@inject IDonViTinhService DonViTinhService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

@if (isLoading)
{
    <div class="container-fluid mt-3">
        <div class="row">
            <div class="col-12 text-center">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Đang tải...</span>
                </div>
                <p class="mt-2">Đang tải dữ liệu phiếu nhập...</p>
            </div>
        </div>
    </div>
}
else
{

<div class="container-fluid print-area mt-3">
    <!-- Header công ty -->
    <div class="row mb-4">
        <div class="col-6">
            <h4>CÔNG TY TNHH ABC</h4>
            <p>Địa chỉ: 123 Đường XYZ, Quận ABC</p>
            <p>Điện thoại: (028) 1234 5678</p>
        </div>
        <div class="col-6 text-end">
            <h2>PHIẾU NHẬP KHO</h2>
            <p>Số: <strong>@SoPhieu</strong></p>
            <p>Ngày: <strong>@(phieuNhap?.Ngay_Nhap_Kho.ToString("dd/MM/yyyy"))</strong></p>
        </div>
    </div>

    <!-- Thông tin phiếu nhập -->
    <div class="row mb-4">
        <div class="col-12">
            <table class="table-borderless table">
                <tbody>
                    <tr>
                        <td style="width: 150px"><strong>Nhập tại kho:</strong></td>
                        <td>@(kho?.Ten_Kho ?? "N/A")</td>
                    </tr>
                    <tr>
                        <td><strong>Nhà cung cấp:</strong></td>
                        <td>@(nhaCungCap?.Ten_NCC ?? "N/A")</td>
                    </tr>
                    @if (!string.IsNullOrEmpty(phieuNhap?.Ghi_Chu))
                    {
                        <tr>
                            <td><strong>Ghi chú:</strong></td>
                            <td>@phieuNhap.Ghi_Chu</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Chi tiết phiếu nhập -->
    <div class="row mb-4">
        <div class="col-12">
            <table class="table-bordered table">
                <thead>
                    <tr class="table-secondary">
                        <th class="text-center">STT</th>
                        <th>Mã sản phẩm</th>
                        <th>Tên sản phẩm</th>
                        <th class="text-center">Đơn vị tính</th>
                        <th class="text-end">Số lượng</th>
                        <th class="text-end">Đơn giá</th>
                        <th class="text-end">Thành tiền</th>
                    </tr>
                </thead>
                <tbody>
                    @if (chiTietPhieu != null)
                    {
                        @for (int i = 0; i < chiTietPhieu.Count; i++)
                        {
                            var item = chiTietPhieu[i];
                            var sanPham = danhSachSanPham.FirstOrDefault(sp => sp.Id == item.San_Pham_ID);
                            var donViTinh = danhSachDonViTinh.FirstOrDefault(dvt => dvt.Id == sanPham?.Don_Vi_Tinh_ID);

                            <tr>
                                <td class="text-center">@(i + 1)</td>
                                <td>@(sanPham?.Ma_San_Pham ?? "N/A")</td>
                                <td>@(sanPham?.Ten_San_Pham ?? "N/A")</td>
                                <td class="text-center">@(donViTinh?.Ten_Don_Vi_Tinh)</td>
                                <td class="text-end">@item.SL_Nhap.ToString("N0")</td>
                                <td class="text-end">@item.Don_Gia_Nhap.ToString("N0")</td>
                                <td class="text-end">@((item.SL_Nhap * item.Don_Gia_Nhap).ToString("N0"))</td>
                            </tr>
                        }
                    }
                </tbody>
                <tfoot>
                    <tr class="table-secondary">
                        <td colspan="6" class="text-end"><strong>Tổng cộng:</strong></td>
                        <td class="text-end"><strong>@tongTien.ToString("N0")</strong></td>
                    </tr>
                    <tr>
                        <td colspan="7">
                            <strong>Tổng số tiền (bằng chữ):</strong> @DocTienBangChu(tongTien) đồng.
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

    <!-- Chữ ký -->
    <div class="row mt-5">
        <div class="col text-center">
            <p><strong>Người lập phiếu</strong></p>
            <p><em>(Ký, họ tên)</em></p>
        </div>
        <div class="col text-center">
            <p><strong>Người giao hàng</strong></p>
            <p><em>(Ký, họ tên)</em></p>
        </div>
        <div class="col text-center">
            <p><strong>Thủ kho</strong></p>
            <p><em>(Ký, họ tên)</em></p>
        </div>
        <div class="col text-center">
            <p><strong>Kế toán trưởng</strong></p>
            <p><em>(Ký, họ tên)</em></p>
        </div>
    </div>
</div>

<!-- Nút in -->
<div class="container-fluid no-print mt-3">
    <div class="row">
        <div class="col-12">
            <button type="button" class="btn btn-primary no-print me-2" @onclick="InPhieu">
                [PRINT] In phiếu
            </button>
            <button type="button" class="btn btn-secondary" @onclick="QuayLai">
                [BACK] Quay lại
            </button>
        </div>
    </div>
</div>
}

@code {
    [Parameter]
    public string SoPhieu { get; set; } = string.Empty;

    private NhapKho phieuNhap = new();
    private List<NhapKhoRaw> chiTietPhieu = new();
    private Kho kho = new();
    private NhaCungCap nhaCungCap = new();
    private List<SanPham> danhSachSanPham = new();
    private List<DonViTinh> danhSachDonViTinh = new();
    private bool isLoading = true;
    private double tongTien => chiTietPhieu?.Sum(x => x.SL_Nhap * x.Don_Gia_Nhap) ?? 0;

        protected override async Task OnInitializedAsync()
    {
        try
        {
            if (!string.IsNullOrEmpty(SoPhieu))
            {
                await LoadData();
            }
            else
            {
                NavigationManager.NavigateTo("/quan-ly-phieu-nhap");
            }
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }



    private async Task LoadData()
    {
        try
        {
            // Load phiếu nhập
            var dsPhieuNhap = await NhapKhoService.GetAllAsync();
            if (dsPhieuNhap != null)
            {
                phieuNhap = dsPhieuNhap.FirstOrDefault(p => p.So_Phieu_Nhap_Kho == SoPhieu) ?? new NhapKho();
            }

            if (phieuNhap != null && phieuNhap.Id > 0)
            {
                // Load chi tiết
                var dsChiTiet = await NhapKhoRawService.GetByPhieuIdAsync(phieuNhap.Id);
                if (dsChiTiet != null)
                {
                    chiTietPhieu = dsChiTiet;
                }

                // Load kho
                var dsKho = await KhoService.GetAllAsync();
                if (dsKho != null)
                {
                    kho = dsKho.FirstOrDefault(k => k.Kho_Id == phieuNhap.Kho_ID) ?? new Kho();
                }

                // Load nhà cung cấp
                var dsNCC = await NhaCungCapService.GetAllAsync();
                if (dsNCC != null)
                {
                    nhaCungCap = dsNCC.FirstOrDefault(n => n.Id == phieuNhap.NCC_ID) ?? new NhaCungCap();
                }

                // Load sản phẩm
                var dsSanPham = await SanPhamService.GetAllAsync();
                if (dsSanPham != null)
                {
                    danhSachSanPham = dsSanPham;
                }

                //Load đơn vị tính
                var dsDVT = await DonViTinhService.GetAllAsync();
                if (dsDVT != null)
                {
                    danhSachDonViTinh = dsDVT;
                }
            }
            else
            {
                NavigationManager.NavigateTo("/quan-ly-phieu-nhap");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi khi load dữ liệu: {ex.Message}");
            NavigationManager.NavigateTo("/quan-ly-phieu-nhap");
        }
    }

    private async Task InPhieu()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("printUtils.printPage");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi khi in: {ex.Message}");
            // Fallback: sử dụng window.print thông thường
            try
            {
                await JSRuntime.InvokeVoidAsync("window.print");
            }
            catch
            {
                Console.WriteLine("Không thể in trang");
            }
        }
    }

    private void QuayLai()
    {
        try
        {
            NavigationManager.NavigateTo("/quan-ly-phieu-nhap");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi khi chuyển trang: {ex.Message}");
        }
    }



    private string DocTienBangChu(double soTien)
    {
        try
        {
            return NumberToWordsHelper.ChuyenSoThanhChu(soTien);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi chuyển số thành chữ: {ex.Message}");
            return "...";
        }
    }
} 