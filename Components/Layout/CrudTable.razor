@typeparam TItem

@code {
    [Parameter] public string Title { get; set; } = "Danh sách";
    [Parameter] public IEnumerable<TItem> Items { get; set; } = new List<TItem>();
    [Parameter] public RenderFragment HeaderContent { get; set; } = default!;
    [Parameter] public RenderFragment<TItem> RowContent { get; set; } = default!;
    [Parameter] public EventCallback OnCreate { get; set; }
    [Parameter] public EventCallback<TItem> OnEdit { get; set; }
    [Parameter] public EventCallback<TItem> OnDelete { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }

    private string ModalId { get; set; } = "crudModal";
    
    protected override void OnInitialized()
    {
        // Không cần gán lại ModalId ở đây
    }

    public void ShowCreateModal()
    {
        OnCreate.InvokeAsync();
    }
}

<div class="card">
    <div class="card-header d-flex justify-content-between">
        <h4>@Title</h4>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#crudModal" @onclick="ShowCreateModal">Thêm mới</button>
    </div>
    <div class="card-body">
        <table class="table-bordered table">    
            <thead>
                @HeaderContent
            </thead>
            <tbody>
                @foreach (var item in Items)
                {
                    <tr>
                        @RowContent(item)
                        <td>
                            <button class="btn btn-sm btn-warning" @onclick="() => OnEdit.InvokeAsync(item)">Sửa</button>
                            <button class="btn btn-sm btn-danger" @onclick="() => OnDelete.InvokeAsync(item)">Xóa</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="crudModal" tabindex="-1" aria-labelledby="crudModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @ChildContent
        </div>
    </div>
</div>